// Code generated by "jade.go"; DO NOT EDIT.

package jade

import (
	"encoding/json"
	"fmt"
	"io"
)

const (
	index__0  = `<html><head><meta charset="utf-8"/><meta http-equiv="X-UA-Compatible" content="IE=edge"/><meta name="viewport" content="width=device-width, initial-scale=1"/><title>chimitheque</title><link href="`
	index__1  = `" rel="stylesheet"/><link href="`
	index__9  = `" rel="stylesheet"/><script src="`
	index__10 = `"></script></head><body><div id="message"></div><div class="container"><footer class="row"><div class="col-sm-12"><span class="text-right blockquote-footer" id="logged"></span></div></footer><nav class="navbar navbar-expand-lg navbar-light bg-light"><a class="navbar-brand" href="https://github.com/tbellembois/gochimitheque"><img src="`
	index__11 = `" alt="chimitheque_logo" title="Chimithèque"/></a><button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button><div class="collapse navbar-collapse" id="navbarSupportedContent"><ul class="navbar-nav mr-auto"><li class="nav-item active collapse" id="menu_list_products"><a href="`
	index__12 = `" class="nav-link"><span class="mdi mdi-home mdi-36px iconlabel">`
	index__13 = `</span></a></li><li class="nav-item active collapse" id="menu_list_bookmarks"><a href="`
	index__14 = `" class="nav-link"><span class="mdi mdi-star mdi-36px iconlabel">`
	index__15 = `</span></a></li><li class="nav-item collapse" id="menu_create_product"><a href="`
	index__16 = `" class="nav-link"><span class="mdi mdi-tag mdi-36px iconlabel">`
	index__17 = `</span></a></li><li class="nav-item dropdown collapse" id="menu_entities"><a href="#" title="manage entities" class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="mdi mdi-store mdi-36px iconlabel">`
	index__18 = `</span></a><div class="dropdown-menu" aria-labelledby="navbarDropdown"><a href="`
	index__19 = `" title="list" class="dropdown-item">`
	index__20 = `<a id="menu_create_entity" class="collapse dropdown-item" href="`
	index__21 = `" title="create">`
	index__22 = `</a></a></div></li><li class="nav-item dropdown collapse" id="menu_storelocations"><a href="#" title="manage storelocations" class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="mdi mdi-docker mdi-36px iconlabel">`
	index__25 = `<a id="menu_create_storelocation" class="collapse dropdown-item" href="`
	index__27 = `</a></a></div></li><li class="nav-item dropdown collapse" id="menu_people"><a href="#" title="manage people" class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><span class="mdi mdi-account-group mdi-36px iconlabel">`
	index__30 = `<a id="menu_create_person" class="collapse dropdown-item" href="`
	index__32 = `</a></a></div></li><li class="nav-item"><a class="nav-link" title="change password" href="`
	index__33 = `"><span class="mdi mdi-shield-lock-outline mdi-36px iconlabel">`
	index__34 = `</span></a></li><li class="nav-item"><a class="nav-link" title="logout" onclick="localStorage.clear();" href="`
	index__35 = `"><span class="mdi mdi-logout mdi-36px iconlabel">`
	index__36 = `</span></a></li></ul></div></nav><header class="row"><div class="col-sm-12"></div></header></div><!--  Code generated by go generate; DO NOT EDIT. --><script>    
	var locale_en_advancedsearch_text = "advanced search";
	
	var locale_en_casnumber_cmr_title = "CMR";
	
	var locale_en_casnumber_label_title = "CAS";
	
	var locale_en_cenumber_label_title = "CE";
	
	var locale_en_classofcompound_label_title = "class of compounds";
	
	var locale_en_clearsearch_text = "clear search form";
	
	var locale_en_close = "close";
	
	var locale_en_create = "create";
	
	var locale_en_created = "created";
	
	var locale_en_createperson_mailsubject = "Chimithèque new account\r\n";
	
	var locale_en_delete = "delete";
	
	var locale_en_edit = "edit";
	
	var locale_en_email_placeholder = "enter your email";
	
	var locale_en_empiricalformula_label_title = "empirical formula";
	
	var locale_en_entity_create_title = "create entity";
	
	var locale_en_entity_created_message = "entity created";
	
	var locale_en_entity_deleted_message = "entity deleted";
	
	var locale_en_entity_description_table_header = "description";
	
	var locale_en_entity_manager_table_header = "manager(s)";
	
	var locale_en_entity_name_table_header = "name";
	
	var locale_en_entity_nameexist_validate = "entity with this name already present";
	
	var locale_en_entity_updated_message = "entity updated";
	
	var locale_en_export_text = "export";
	
	var locale_en_hazardstatement_label_title = "hazard statement(s)";
	
	var locale_en_hidedeleted_text = "hide deleted";
	
	var locale_en_linearformula_label_title = "liner formula";
	
	var locale_en_list = "list";
	
	var locale_en_logo_information1 = "Chimithèque logo designed by ";
	
	var locale_en_logo_information2 = "Do not use or copy without her permission.";
	
	var locale_en_members = "members";
	
	var locale_en_menu_bookmark = "my bookmarks";
	
	var locale_en_menu_create_productcard = "create product card";
	
	var locale_en_menu_entity = "entities";
	
	var locale_en_menu_home = "home";
	
	var locale_en_menu_logout = "logout";
	
	var locale_en_menu_password = "change my password";
	
	var locale_en_menu_people = "people";
	
	var locale_en_menu_storelocation = "store locations";
	
	var locale_en_modified = "modified";
	
	var locale_en_password_placeholder = "enter your password";
	
	var locale_en_physicalstate_label_title = "physical state";
	
	var locale_en_precautionarystatement_label_title = "precautionary statement(s)";
	
	var locale_en_product_disposalcomment_title = "disposal comment";
	
	var locale_en_product_msds_title = "MSDS";
	
	var locale_en_product_radioactive_title = "radioactive";
	
	var locale_en_product_remark_title = "remark";
	
	var locale_en_product_restricted_title = "restricted access";
	
	var locale_en_product_threedformula_title = "3D formula";
	
	var locale_en_required_input = "required input";
	
	var locale_en_resetpassword2_text = "reset my password, I am not a robot";
	
	var locale_en_resetpassword_areyourobot = "are you a robot?";
	
	var locale_en_resetpassword_done = "A new temporary password has been sent to %s";
	
	var locale_en_resetpassword_mailsubject1 = "Chimithèque new temporary password\r\n";
	
	var locale_en_resetpassword_mailsubject2 = "Chimithèque password reset link\r\n";
	
	var locale_en_resetpassword_message_mailsentto = "a reinitialization link has been sent to";
	
	var locale_en_resetpassword_text = "reset password";
	
	var locale_en_resetpassword_warning_enteremail = "enter your email in the login form";
	
	var locale_en_s_casnumber = "CAS";
	
	var locale_en_s_casnumber_cmr = "CMR";
	
	var locale_en_s_custom_name_part_of = "part of name";
	
	var locale_en_s_empiricalformula = "emp. formula";
	
	var locale_en_s_hazardstatements = "hazard statement(s)";
	
	var locale_en_s_name = "name";
	
	var locale_en_s_precautionarystatements = "precautionary statement(s)";
	
	var locale_en_s_signalword = "signal word";
	
	var locale_en_s_storage_barecode = "barecode";
	
	var locale_en_s_symbols = "symbol(s)";
	
	var locale_en_save = "save";
	
	var locale_en_search_text = "search";
	
	var locale_en_showdeleted_text = "show deleted";
	
	var locale_en_signalword_label_title = "signal word";
	
	var locale_en_stock_storelocation_sub_title = "including children store locations";
	
	var locale_en_stock_storelocation_title = "in this store location";
	
	var locale_en_storage_barecode_title = "barecode";
	
	var locale_en_storage_batchnumber_title = "batch number";
	
	var locale_en_storage_borrow = "borrow";
	
	var locale_en_storage_clone = "clone";
	
	var locale_en_storage_comment_title = "comment";
	
	var locale_en_storage_entrydate_title = "entry date";
	
	var locale_en_storage_exitdate_title = "exit date";
	
	var locale_en_storage_expirationdate_title = "expiration date";
	
	var locale_en_storage_openingdate_title = "opening date";
	
	var locale_en_storage_quantity_title = "quantity";
	
	var locale_en_storage_restore = "restore";
	
	var locale_en_storage_showhistory = "show history";
	
	var locale_en_storage_unborrow = "unborrow";
	
	var locale_en_storelocations = "storelocations";
	
	var locale_en_submitlogin_text = "enter";
	
	var locale_en_supplier_label_title = "supplier";
	
	var locale_en_switchproductview_text = "switch to product view";
	
	var locale_en_switchstorageview_text = "switch to storage view";
	
	var locale_en_test = "One test";
	
    
	var locale_fr_advancedsearch_text = "recherche avancée";
	
	var locale_fr_casnumber_cmr_title = "CMR";
	
	var locale_fr_casnumber_label_title = "CAS";
	
	var locale_fr_cenumber_label_title = "CE";
	
	var locale_fr_classofcompound_label_title = "famille chimique";
	
	var locale_fr_clearsearch_text = "effacer le formulaire";
	
	var locale_fr_close = "fermer";
	
	var locale_fr_create = "créer";
	
	var locale_fr_created = "créé";
	
	var locale_fr_createperson_mailsubject = "Chimithèque nouveau compte\r\n";
	
	var locale_fr_delete = "supprimer";
	
	var locale_fr_edit = "editer";
	
	var locale_fr_email_placeholder = "entrez votre email";
	
	var locale_fr_empiricalformula_label_title = "formule brute";
	
	var locale_fr_entity_create_title = "créer une entité";
	
	var locale_fr_entity_created_message = "entité crée";
	
	var locale_fr_entity_deleted_message = "entité supprimée";
	
	var locale_fr_entity_description_table_header = "description";
	
	var locale_fr_entity_manager_table_header = "responsable(s)";
	
	var locale_fr_entity_name_table_header = "nom";
	
	var locale_fr_entity_nameexist_validate = "une entité avec ce nom existe déjà";
	
	var locale_fr_entity_updated_message = "entité mise à jour";
	
	var locale_fr_export_text = "exporter";
	
	var locale_fr_hazardstatement_label_title = "mention(s) de danger H-EUH";
	
	var locale_fr_hidedeleted_text = "cacher supprimés";
	
	var locale_fr_linearformula_label_title = "formule linéaire";
	
	var locale_fr_list = "lister";
	
	var locale_fr_logo_information1 = "Logo Chimithèque réalisé par ";
	
	var locale_fr_logo_information2 = "Ne pas utiliser ou copier sans sa permission.";
	
	var locale_fr_members = "membres";
	
	var locale_fr_menu_bookmark = "mes favoris";
	
	var locale_fr_menu_create_productcard = "créer fiche produit";
	
	var locale_fr_menu_entity = "entités";
	
	var locale_fr_menu_home = "accueil";
	
	var locale_fr_menu_logout = "déconnexion";
	
	var locale_fr_menu_password = "changer mon mot de passe";
	
	var locale_fr_menu_people = "utilisateurs";
	
	var locale_fr_menu_storelocation = "entrepôts";
	
	var locale_fr_modified = "modifié";
	
	var locale_fr_password_placeholder = "entrez votre mot de passe";
	
	var locale_fr_physicalstate_label_title = "état physique";
	
	var locale_fr_precautionarystatement_label_title = "conseil(s) de prudence P";
	
	var locale_fr_product_disposalcomment_title = "commentaire de destruction";
	
	var locale_fr_product_msds_title = "FDS";
	
	var locale_fr_product_radioactive_title = "radioactif";
	
	var locale_fr_product_remark_title = "remarque";
	
	var locale_fr_product_restricted_title = "accès restreint";
	
	var locale_fr_product_threedformula_title = "formule 3D";
	
	var locale_fr_required_input = "champs requis";
	
	var locale_fr_resetpassword2_text = "réinitialiser mon mot de passe, je ne suis pas un robot";
	
	var locale_fr_resetpassword_areyourobot = "êtes vous un robot ?";
	
	var locale_fr_resetpassword_done = "Un nouveau mot de passe temporaire a été envoyé à %s";
	
	var locale_fr_resetpassword_mailsubject1 = "Chimithèque nouveau mot de passe temporaire\r\n";
	
	var locale_fr_resetpassword_mailsubject2 = "Chimithèque lien de réinitialisation de mot de passe\r\n";
	
	var locale_fr_resetpassword_message_mailsentto = "un mail de réinitialisation a été envoyé à";
	
	var locale_fr_resetpassword_text = "réinitialiser mon mot de passe";
	
	var locale_fr_resetpassword_warning_enteremail = "entrez votre adresse mail dans le formulaire";
	
	var locale_fr_s_casnumber = "CAS";
	
	var locale_fr_s_custom_name_part_of = "partie du nom";
	
	var locale_fr_s_empiricalformula = "formule brute";
	
	var locale_fr_s_hazardstatements = "mention(s) de danger H-EUH";
	
	var locale_fr_s_name = "nom";
	
	var locale_fr_s_precautionarystatements = "conseil(s) de prudence P";
	
	var locale_fr_s_signalword = "mention d'avertissement";
	
	var locale_fr_s_storage_barecode = "code barre";
	
	var locale_fr_s_symbols = "symbole(s)";
	
	var locale_fr_save = "enregistrer";
	
	var locale_fr_search_text = "rechercher";
	
	var locale_fr_showdeleted_text = "voir supprimés";
	
	var locale_fr_signalword_label_title = "mention d'avertissement";
	
	var locale_fr_storage_barecode_title = "code barre";
	
	var locale_fr_storage_batchnumber_title = "numéro de lot";
	
	var locale_fr_storage_borrow = "emprunter";
	
	var locale_fr_storage_clone = "cloner";
	
	var locale_fr_storage_comment_title = "commentaire";
	
	var locale_fr_storage_entrydate_title = "date d'entrée";
	
	var locale_fr_storage_exitdate_title = "date de sortie";
	
	var locale_fr_storage_expirationdate_title = "date d'expiration";
	
	var locale_fr_storage_openingdate_title = "date d'ouverture";
	
	var locale_fr_storage_quantity_title = "quantité";
	
	var locale_fr_storage_restore = "restaurer";
	
	var locale_fr_storage_showhistory = "voir historique";
	
	var locale_fr_storage_unborrow = "restituer";
	
	var locale_fr_storelocations = "entrepôts";
	
	var locale_fr_submitlogin_text = "entrer";
	
	var locale_fr_supplier_label_title = "fournisseur";
	
	var locale_fr_switchproductview_text = "vue par produits";
	
	var locale_fr_switchstorageview_text = "vue par stockages";
	
	var locale_fr_test = "Un test";
	</script>`
	index__37 = `<script>            //
            // common javascript
            //

            // query parameters saved - used for the storages<>products views switch
            var lastQueryParams;

            // proxy path
            var proxyPath = "`
	index__38 = `";
            
            // request context
            var container = `
	index__39 = `;

            // url parameters
            var URLValues = new Map();

            // initializing query parameters map
            `
	index__40 = `

            // setting up logged user
            window.onload = function() {
                // cookie set by the GetTokenHandler() function after login
                var email = readCookie("email")
                var urlParams = new URLSearchParams(window.location.search);
                var message = urlParams.get("message");
                
                if (email != null) {
                    document.getElementById("logged").innerHTML = email;
                }
                if (message != null) {
                    global.displayMessage(message, "success");
                }

                // showing menu items given the connected person permissions
                hasPermission("products", "-2", "GET").done(function(){
                    $("#menu_list_products").show();
                    $("#menu_list_bookmarks").show();
                    localStorage.setItem("products:-2:GET", true);
                }).fail(function(){
                    localStorage.setItem("products:-2:GET", false);
                })
                hasPermission("products", "", "POST").done(function(){
                    $("#menu_create_product").show();
                    localStorage.setItem("products::POST", true);
                }).fail(function(){
                    localStorage.setItem("products::POST", false);
                })
                hasPermission("entities", "", "POST").done(function(){
                    $("#menu_entities").show();
                    $("#menu_create_entity").show();
                    localStorage.setItem("entities::POST", true);
                }).fail(function(){
                    localStorage.setItem("entities::POST", false);
                })
                hasPermission("storages", "-2", "GET").done(function(){
                    $("#menu_storelocations").show();
                    localStorage.setItem("storages:-2:GET", true);
                }).fail(function(){
                    localStorage.setItem("storages:-2:GET", false);
                })
                hasPermission("storages", "", "POST").done(function(){
                    $("#menu_create_storelocation").show();
                    localStorage.setItem("storages::POST", true);
                }).fail(function(){
                    localStorage.setItem("storages::POST", false);
                })
                hasPermission("people", "-2", "GET").done(function(){
                    $("#menu_people").show();
                    localStorage.setItem("people:-2:GET", true);
                }).fail(function(){
                    localStorage.setItem("people:-2:GET", false);
                })
                hasPermission("people", "", "POST").done(function(){
                    $("#menu_create_person").show();
                    localStorage.setItem("people::POST", true);
                }).fail(function(){
                    localStorage.setItem("people::POST", false);
                })
            };

            // call the "fake" (/f/) endpoints to check
            // the permission on the given item and
            // stores the result in the cache
            function hasPermission(item, id, method) {
                // promise to be returned
                var permpromise = $.Deferred();

                // building the cache key
                key = item + ":" + id + ":" + method

                // getting the permission cache
                permcache = localStorage.getItem(key);

                if (permcache) {
                    if (permcache == "true") {
                        permpromise.resolve();
                    } else {
                        permpromise.reject();
                    }
                } else {
                    // building ajax url
                    if (id != "") {
                        url = proxyPath + "f/" + item + "/" + id;
                    } else {
                        url = proxyPath + "f/" + item;
                    }

                    permpromise = $.ajax({
                        url: url,
                        method: method,
                    });
                }
                return permpromise;
            }
           </script><script src="`
	index__41 = `"></script><script src="`
	index__54 = `"></script></body></html>`
)

func Home(c ViewContainer, wr io.Writer) {
	buffer := &WriterAsBuffer{wr}

	buffer.WriteString(index__0)
	WriteAll(c.ProxyPath+"css/bootstrap.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-table.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/select2.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-colorpicker.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/fontawesome.all.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/chimitheque.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/materialdesignicons.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-toggle.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/animate.min.css", true, buffer)
	buffer.WriteString(index__9)
	WriteAll(c.ProxyPath+"js/jquery-3.3.1.min.js", true, buffer)
	buffer.WriteString(index__10)
	WriteAll(c.ProxyPath+"img/logo_chimitheque_small.png", true, buffer)
	buffer.WriteString(index__11)
	WriteAll(c.ProxyPath+"v/products", true, buffer)
	buffer.WriteString(index__12)
	WriteAll(T("menu_home", 1), true, buffer)
	buffer.WriteString(index__13)
	WriteAll(c.ProxyPath+"v/products?bookmark=true", true, buffer)
	buffer.WriteString(index__14)
	WriteAll(T("menu_bookmark", 1), true, buffer)
	buffer.WriteString(index__15)
	WriteAll(c.ProxyPath+"vc/products", true, buffer)
	buffer.WriteString(index__16)
	WriteAll(T("menu_create_productcard", 1), true, buffer)
	buffer.WriteString(index__17)
	WriteAll(T("menu_entity", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/entities", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__20)
	WriteAll(c.ProxyPath+"vc/entities", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__22)
	WriteAll(T("menu_storelocation", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/storelocations", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__25)
	WriteAll(c.ProxyPath+"vc/storelocations", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__27)
	WriteAll(T("menu_people", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/people", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__30)
	WriteAll(c.ProxyPath+"vc/people", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__32)
	WriteAll(c.ProxyPath+"vu/peoplepass", true, buffer)
	buffer.WriteString(index__33)
	WriteAll(T("menu_password", 1), true, buffer)
	buffer.WriteString(index__34)
	WriteAll(c.ProxyPath+"delete-token", true, buffer)
	buffer.WriteString(index__35)
	WriteAll(T("menu_logout", 1), true, buffer)
	buffer.WriteString(index__36)

	json, _ := json.Marshal(c)

	var out string
	for key, value := range c.URLValues {
		out += fmt.Sprintf("URLValues.set(%s, %s)\n", key, value)
	}

	buffer.WriteString(index__37)
	WriteAll(c.ProxyPath, false, buffer)
	buffer.WriteString(index__38)
	buffer.WriteString(fmt.Sprintf("%s", json))
	buffer.WriteString(index__39)
	buffer.WriteString(out)
	buffer.WriteString(index__40)
	WriteAll(c.ProxyPath+"js/jquery.formautofill.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/jquery.validate.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/jquery.validate.additional-methods.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/select2.full.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/popper.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-table.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-confirmation.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-colorpicker.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-toggle.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/JSmol.lite.nojq.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/gjs-common.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/chimcommon.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/login.js", true, buffer)
	buffer.WriteString(index__54)

}
