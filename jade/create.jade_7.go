// Code generated by "jade.go"; DO NOT EDIT.

package jade

import (
	"encoding/json"
	"fmt"
	"io"
)

const (
	create_7__37 = `<div class="row"><div class="d-flex justify-content-center"><div id="filter-product"></div></div></div><form id="storage"><input id="index" type="hidden" name="index" value=""/><input id="product_id" type="hidden" name="product_id" value=""/><input id="exactMatchSupplier" type="hidden"/><div class="form-group row"><div class="col-sm-4">`
	create_7__38 = `</div></div><hr/><div class="form-group row"><div class="form-group col-sm-auto"><span class="badge badge-pill badge-danger">&nbsp;</span></div><div class="form-group col-sm-11">`
	create_7__70 = `"></script><script>
       $( document ).ready(function() {           

            //
            // retrieving product
            //
            var urlParams = new URLSearchParams(window.location.search);
            p = urlParams.get("product");
            if (p === null) {
                window.location.replace("/v/products");
            }
            // getting the product
            $.ajax({
                url: proxyPath + "products/" + p,
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                $("input#product_id").val(p);
                $("#filter-product").html(global.createTitle(data.name.name_label + " (" + data.casnumber.casnumber_label + ") " + data.product_specificity.String, "product"));
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });

            // clone mode
            s = urlParams.get("storage");
            if (s !== null) {
            // getting the storage
            $.ajax({
                url: proxyPath + "storages/" + s,
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // flattening response data
                fdata = flatten(data);

                // processing sqlNull values
                //newfdata = normalizeSqlNull(fdata)
                newfdata = global.normalizeSqlNull(fdata);

                // autofilling form
                $("form#storage").autofill( newfdata, {"findbyname": false } );

                // select2 is not autofilled - we need a special operation
                var newOption = new Option(data.storelocation.storelocation_name.String, data.storelocation.storelocation_id.Int64, true, true);
                $('select#storelocation').append(newOption).trigger('change');

                if (data.unit.unit_id.Valid) {
                    var newOption = new Option(data.unit.unit_label.String, data.unit.unit_id.Int64, true, true);
                    $('select#unit').append(newOption).trigger('change');
                }

                if (data.supplier.supplier_id.Valid) {
                    var newOption = new Option(data.supplier.supplier_label.String, data.supplier.supplier_id.Int64, true, true);
                    $('select#supplier').append(newOption).trigger('change');
                }         
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
            }

        });
</script><script src="../js/chim/storage.js"></script></body></html>`
)

func Storagecreate(c ViewContainer, wr io.Writer) {
	buffer := &WriterAsBuffer{wr}

	buffer.WriteString(index__0)
	WriteAll(c.ProxyPath+"css/bootstrap.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-table.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/select2.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-colorpicker.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/fontawesome.all.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/chimitheque.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/materialdesignicons.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/bootstrap-toggle.min.css", true, buffer)
	buffer.WriteString(index__1)
	WriteAll(c.ProxyPath+"css/animate.min.css", true, buffer)
	buffer.WriteString(index__9)
	WriteAll(c.ProxyPath+"js/jquery-3.3.1.min.js", true, buffer)
	buffer.WriteString(index__10)
	WriteAll(c.ProxyPath+"img/logo_chimitheque_small.png", true, buffer)
	buffer.WriteString(index__11)
	WriteAll(c.ProxyPath+"v/products", true, buffer)
	buffer.WriteString(index__12)
	WriteAll(T("menu_home", 1), true, buffer)
	buffer.WriteString(index__13)
	WriteAll(c.ProxyPath+"v/products?bookmark=true", true, buffer)
	buffer.WriteString(index__14)
	WriteAll(T("menu_bookmark", 1), true, buffer)
	buffer.WriteString(index__15)
	WriteAll(c.ProxyPath+"vc/products", true, buffer)
	buffer.WriteString(index__16)
	WriteAll(T("menu_create_productcard", 1), true, buffer)
	buffer.WriteString(index__17)
	WriteAll(T("menu_entity", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/entities", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__20)
	WriteAll(c.ProxyPath+"vc/entities", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__22)
	WriteAll(T("menu_storelocation", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/storelocations", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__25)
	WriteAll(c.ProxyPath+"vc/storelocations", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__27)
	WriteAll(T("menu_people", 1), true, buffer)
	buffer.WriteString(index__18)
	WriteAll(c.ProxyPath+"v/people", true, buffer)
	buffer.WriteString(index__19)
	WriteAll(T("list", 1), true, buffer)
	buffer.WriteString(index__30)
	WriteAll(c.ProxyPath+"vc/people", true, buffer)
	buffer.WriteString(index__21)
	WriteAll(T("create", 1), true, buffer)
	buffer.WriteString(index__32)
	WriteAll(c.ProxyPath+"vu/peoplepass", true, buffer)
	buffer.WriteString(index__33)
	WriteAll(T("menu_password", 1), true, buffer)
	buffer.WriteString(index__34)
	WriteAll(c.ProxyPath+"delete-token", true, buffer)
	buffer.WriteString(index__35)
	WriteAll(T("menu_logout", 1), true, buffer)
	buffer.WriteString(create__36)

	{
		var (
			iconitem   = "creation"
			iconaction = "forklift"
			label      = "create storage"
		)

		buffer.WriteString(index_2__64)
		WriteEscString("mdi-"+iconitem+" mdi mdi-48px", buffer)
		buffer.WriteString(index_2__65)
		WriteEscString("mdi-"+iconaction+" mdi mdi-18px", buffer)
		buffer.WriteString(index_2__66)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__67)

	}

	buffer.WriteString(create_7__37)

	{
		var (
			label = "nb duplicates"
			name  = "storage_nbitem"
			step  = "1"
			min   = "1"
			max   = "50"
			value = ""
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__196)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_6__199)
		WriteEscString(step, buffer)
		buffer.WriteString(index_6__200)
		WriteEscString(min, buffer)
		buffer.WriteString(index_6__201)
		WriteEscString(max, buffer)
		buffer.WriteString(index_4__98)
		WriteEscString(value, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(create_7__38)

	{
		var (
			label = "store location"
			name  = "storelocation"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__82)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_4__155)

	}

	buffer.WriteString(index_6__62)

	{
		var (
			label = "quantity"
			name  = "storage_quantity"
			step  = "any"
			min   = "1"
			max   = "10000000"
			value = ""
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__196)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_6__199)
		WriteEscString(step, buffer)
		buffer.WriteString(index_6__200)
		WriteEscString(min, buffer)
		buffer.WriteString(index_6__201)
		WriteEscString(max, buffer)
		buffer.WriteString(index_4__98)
		WriteEscString(value, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_4__40)

	{
		var (
			label = "unit"
			name  = "unit"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__82)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_4__155)

	}

	buffer.WriteString(index_6__57)

	{
		var (
			label = "supplier"
			name  = "supplier"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__82)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_4__155)

	}

	buffer.WriteString(index_6__65)

	{
		var (
			label = "entry date"
			name  = "storage_entrydate"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__216)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__66)

	{
		var (
			label = "exit date"
			name  = "storage_exitdate"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__216)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__66)

	{
		var (
			label = "opening date"
			name  = "storage_openingdate"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__216)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__66)

	{
		var (
			label = "expiration date"
			name  = "storage_expirationdate"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_6__216)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__62)

	{
		var (
			label = "reference"
			name  = "storage_reference"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__70)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_4__40)

	{
		var (
			label = "batch number"
			name  = "storage_batchnumber"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__70)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__57)

	{
		var (
			label = "barecode"
			name  = "storage_barecode"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__70)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__57)

	{
		var (
			label = "comment"
			name  = "storage_comment"
		)

		buffer.WriteString(index_2__68)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_2__70)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__71)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__72)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__73)
	}

	buffer.WriteString(index_6__57)

	{
		var (
			label = "to destroy"
			name  = "storage_todestroy"
		)

		buffer.WriteString(index_4__171)
		WriteEscString(name, buffer)
		buffer.WriteString(index_4__172)
		WriteEscString(name, buffer)
		buffer.WriteString(index_2__69)
		WriteEscString(label, buffer)
		buffer.WriteString(index_4__174)
	}

	buffer.WriteString(index_6__74)
	WriteAll(T("save", 1), true, buffer)
	buffer.WriteString(create__41)

	json, _ := json.Marshal(c)

	var out string
	for key, value := range c.URLValues {
		out += fmt.Sprintf("URLValues.set(%s, %s)\n", key, value)
	}

	buffer.WriteString(index__37)
	WriteAll(c.ProxyPath, false, buffer)
	buffer.WriteString(index__38)
	buffer.WriteString(fmt.Sprintf("%s", json))
	buffer.WriteString(index__39)
	buffer.WriteString(out)
	buffer.WriteString(index__40)
	WriteAll(c.ProxyPath+"js/jquery.formautofill.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/jquery.validate.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/jquery.validate.additional-methods.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/select2.full.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/popper.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-table.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-confirmation.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-colorpicker.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/bootstrap-toggle.min.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/JSmol.lite.nojq.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/gjs-common.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/chimcommon.js", true, buffer)
	buffer.WriteString(index__41)
	WriteAll(c.ProxyPath+"js/chim/login.js", true, buffer)
	buffer.WriteString(create_7__70)

}
