extends static/templates/base.jade

block content
    form#entity-create
        .form-group.row
            label.col-sm-2.col-form-label(for='name') name
            .col-sm-10
                input#entity_name.form-control(type='text', value='', name='name')
        .form-group.row
            label.col-sm-2.col-form-label(for='description') description
            .col-sm-10
                input#entity_description.form-control(type='text', value='', name='description')
        .form-group.row
            label.col-sm-2.col-form-label(for='person') manager
            .col-sm-10
                select.form-control(style='width: 100% !important;', id='person_email', name='person', multiple='multiple')
    button#save.btn.btn-primary(type='button', onclick='saveEntity()') save changes

block contentjs
    script.

        $( document ).ready(function() {

            //
            // create form validation
            //
            $( "#entity-create" ).validate({
            errorClass: "alert alert-danger",
            rules: {
                name: {
                required: true,
                remote: {
                    url: "",
                    beforeSend: function(jqXhr, settings) {
                        settings.url = "/validate/entity/-1/name/" + $("input#entity_name").val();
                    },
                },
                },
                person: {
                    required: true,
                },
            },
            });

            //
            // manager select2
            //
            $('select[id="person_email"]').select2({
            ajax: {
                url: '/people',
                dataType: 'json',
                processResults: function (data) {
                // replacing email by text expected by select2
                var newdata = $.map(data, function (obj) {
                    obj.text = obj.text || obj.person_email;
                    obj.id = obj.id || obj.person_id;
                    return obj;
                });
                return {
                    results: newdata
                };
                }
            }
            });
        });

        //
        // save entity callback
        //
        function saveEntity() {
            var form = $("#entity-create");
            if (!form.valid()) {
                return;
            };

            var name = $("input#entity_name").val(),
                description = $("input#entity_description").val(),
                selectedmanagers = $('select[id="person_email"]').select2('data');
                data = {};
                $.each(selectedmanagers, function( index, m ) {
                    data["managers." + index +".person_id"] = m.id;
                    data["managers." + index +".person_email"] = m.text;
                });
                $.extend(data, {
                    "entity_name": name,
                    "entity_description": description,
                });
            $.ajax({
                url: "/entity",
                method: "POST",
                dataType: 'json',
                data: data,
            }).done(function(data, textStatus, jqXHR) {
                displayMessage("entity " + name + " created", "success");
                setTimeout(function(){ window.location = "/v/entities"; }, 1000);
            }).fail(function(jqXHR, textStatus, errorThrown) {  
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            }); 
        }