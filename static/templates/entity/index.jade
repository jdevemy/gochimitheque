| {{define "CONTENT"}}
    #accordion
        #list-collapse.collapse.show(data-parent='#accordion')
            header.row
                .col-sm-12
                    table#table(data-toggle='table', 
                                data-striped='true', 
                                data-search='true', 
                                data-side-pagination='server', 
                                data-page-list="[10, 20, 50, 100]",
                                data-pagination='true', 
                                data-ajax='getData', 
                                data-sort-name='entity_name')
                        thead
                            tr
                                th(data-field='entity_id') ID
                                th(data-field='entity_name' data-sortable='true') name
                                th(data-field='entity_description') description
                                th(data-field='managers' data-formatter='managersFormatter') manager(s)
                                th(data-field='operate', data-formatter='operateFormatter', data-events='operateEvents') actions

        #edit-collapse.collapse(data-parent='#accordion')
            form#entity
                input#index(type='hidden', name='index', value='')
                input#entity_id(type='hidden', name='entity_id', value='')

                .form-group.row
                    | {{$label := "name"}} {{$name := "entity_name"}}
                    +inputtext
                .form-group.row
                    | {{$label := "description"}} {{$name := "entity_description"}}
                    +inputtext
                .form-group.row
                    | {{$label := "manager(s)"}} {{$name := "managers"}}
                    +selectmultiple

            button#save.btn.btn-link(type='button', onclick='saveEntity()')
                span.mdi.mdi-content-save.mdi-24px.iconlabel
                    | {{ T "save" 1 }}
            button.btn.btn-secondary(type='button', onclick='closeViewEdit();')
                span.mdi.mdi-close-box.mdi-24px.iconlabel
                    | {{ T "close" 1 }}

| {{end}}

| {{define "CONTENTJS"}}
| {{template "COMMONCONTENTJS"}}
    script.
        //
        // close buttons actions
        //
        function closeViewEdit() { $("#list-collapse").collapse("show"); $("#edit-collapse").collapse("hide"); }
        
        $( document ).ready(function() {
            
            // populating search input if needed
            if (URLValues.has("search")) {
                $('#table').bootstrapTable('resetSearch', URLValues.get("search")[0]);
            }

        });

        //
        // table data loading
        //
        function getData(params) {
            $.ajax({
                url: proxyPath + "entities",
                method: "GET",
                dataType: "JSON",
                data: params.data,
            }).done(function(data, textStatus, jqXHR) {
                params.success({
                    rows: data.rows,
                    total: data.total,
                });
            }).fail(function(jqXHR, textStatus, errorThrown) {
                params.error(jqXHR.statusText);                
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
        }

        //
        // when table is loaded
        //
        $('#table').on('load-success.bs.table refresh.bs.table', function () {
            $("button.storelocations").each(function( index, b ) {
                hasPermission("entities", $(b).attr("eid"), "GET").done(function(){
                    $("#storelocations"+$(b).attr("eid")).fadeIn();
                    $("#members"+$(b).attr("eid")).fadeIn();
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":GET", true);
                }).fail(function(){
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":GET", false);
                })
            });
            $("button.storelocations").each(function( index, b ) {
                hasPermission("entities", $(b).attr("eid"), "PUT").done(function(){
                    $("#edit"+$(b).attr("eid")).fadeIn();
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":PUT", true);
                }).fail(function(){
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":PUT", false);
                })
            });
            $("button.storelocations").each(function( index, b ) {
                hasPermission("entities", $(b).attr("eid"), "DELETE").done(function(){
                    $("#delete"+$(b).attr("eid")).fadeIn();
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":DELETE", true);
                }).fail(function(){
                    localStorage.setItem("entities:" + $(b).attr("eid") + ":DELETE", false);
                })
            });
        });

        //
        // managers formatter
        //
        function managersFormatter(value, row, index, field) {
            var html = [ "<ul>" ]; 
            $.each(value, function( index, m ) {
                html.push("<li>" + m.person_email + "</li>");
            });
            html.push("</ul>");
            return html.join("");
        }

        //
        // table items actions
        //
        function operateFormatter(value, row, index) {
            // show action buttons if permitted
            eid = row.entity_id

            // buttons are hidden by default
            var actions = [
            '<button id="storelocations' + eid + '" eid="' + eid + '" class="storelocations btn btn-link btn-sm" style="display: none;" title="store locations" type="button">',
                '<span class="mdi mdi-docker mdi-24px"></span>',
            '</button>',
            '<button id="members' + eid + '" eid="' + eid + '" class="members btn btn-link btn-sm" style="display: none;" title="members" type="button">',
                '<span class="mdi mdi-account-group mdi-24px"></span>',
            '</button>',
            '<button id="edit' + eid + '" eid="' + eid + '" class="edit btn btn-link btn-sm" style="display: none;" title="edit" type="button">',
                '<span class="mdi mdi-border-color mdi-24px"></span>',
            '</button>',
            '<button id="delete' + eid + '" eid="' + eid + '" class="delete btn btn-link btn-sm" style="display: none;" title="delete" type="button">',
                '<span class="mdi mdi-delete mdi-24px"></span>',
            '</button>'];

            return actions.join('&nbsp;')    
        }

        // items actions callback
        function operateEdit(e, value, row, index) {
            // clearing selections
            $('select#managers').val(null).trigger('change');
            $('select#managers').find('option').remove();

            // getting the entity
            $.ajax({
                url: proxyPath + "entities/" + row['entity_id'],
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // flattening response data
                fdata = flatten(data);
                // autofilling form
                $("#edit-collapse").autofill( fdata, {"findbyname": false } );
                // setting index hidden input
                $("input#index").val(index);
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });

            // getting the entity managers
            $.ajax({
                url: proxyPath + "entities/" + row['entity_id'] + "/people",
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // select2 is not autofilled - we need a special operation
                for(var i in data) {
                   var newOption = new Option(data[i].person_email, data[i].person_id, true, true);
                   $('select#managers').append(newOption).trigger('change');
                }
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });

            // finally collapsing the view
            $('#edit-collapse').collapse('show');
            $('#list-collapse').collapse('hide');
        }
        window.operateEvents = {
            'click .storelocations': function (e, value, row, index) {
                window.location.href = proxyPath + "v/storelocations?entity=" + row['entity_id'];
            },
            'click .members': function (e, value, row, index) {
                window.location.href = proxyPath + "v/people?entity=" + row['entity_id'];
            },
            'click .edit': function (e, value, row, index) {
                operateEdit(e, value, row, index)
            },
            'click .delete': function (e, value, row, index) {
                // hiding possible previous confirmation button
                $(this).confirmation("show").off( "confirmed.bs.confirmation");
                $(this).confirmation("show").off( "canceled.bs.confirmation");
                
                // ask for confirmation and then delete
                $(this).confirmation("show").on( "confirmed.bs.confirmation", function() {
                    $.ajax({
                        url: proxyPath + "entities/" + row['entity_id'],
                        method: "DELETE",
                    }).done(function(data, textStatus, jqXHR) {
                        global.displayMessage("entity deleted", "success");
                        var $table = $('#table');
                        $table.bootstrapTable('refresh');
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        handleHTTPError(jqXHR.statusText, jqXHR.status)
                    });
                }).on( "canceled.bs.confirmation", function() {
                });
            }
        };
| {{end}}
