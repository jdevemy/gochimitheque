| {{define "CONTENT"}}

    .row
        .col-sm-12
            button.btn.btn-dark#switchview(type="button" onclick="location.href='/v/storages';") switch to storage view

    #accordion
        #list-collapse.collapse.show(data-parent='#accordion')
            header.row
                .col-sm-12
                    table#table(data-toggle='table', 
                                data-striped='true', 
                                data-search='true', 
                                data-side-pagination='server', 
                                data-page-list="[10, 20, 50, 100]",
                                data-pagination='true', 
                                data-ajax='getData', 
                                data-query-params='queryParams',
                                data-sort-name='name.name_label',
                                data-detail-view="true",
                                data-detail-formatter="detailFormatter")
                        thead
                            tr
                                th(data-field='product_id' data-sortable='true') ID
                                th(data-field='name.name_label' data-sortable='true') name
                                th(data-field='casnumber.casnumber_label' data-sortable='true') CAS
                                th(data-field='product_specificity' data-sortable='false' data-formatter='product_specificityFormatter') specificity
                                th(data-field='operate' data-formatter='operateFormatter' data-events='operateEvents') actions

        #edit-collapse.collapse(data-parent='#accordion')
            form#product
                input#index(type='hidden', name='index', value='')
                input#product_id(type='hidden', name='product_id', value='')

                input#exactMatchEmpiricalFormula(type="hidden")
                input#exactMatchCasNumber(type="hidden")
                input#exactMatchCeNumber(type="hidden")
                input#exactMatchName(type="hidden")
                input#exactMatchSynonyms(type="hidden")
                input#exactMatchClassofcompounds(type="hidden")

                .form-row
                    .form-group.col-sm-auto
                        span.badge.badge-pill.badge-danger &nbsp;
                    .form-group.col-sm-5
                        | {{$label := "name"}} {{$name := "name"}}
                        +select
                    .form-group.col-sm-5
                        | {{$label := "synonym(s)"}} {{$name := "synonyms"}}
                        +selectmultiple

                .form-row
                    .form-group.col-sm-12
                        | {{$label := "specificity"}} {{$name := "product_specificity"}}
                        +inputtext

                .form-row
                    .form-group.col-sm-auto
                        span.badge.badge-pill.badge-danger &nbsp;
                    .form-group.col-sm-6
                        | {{$label := "empirical formula"}} {{$name := "empiricalformula"}}
                        +select
                    .form-group.col-sm-5
                        | {{$label := "linear formula"}} {{$name := "product_linearformula"}}
                        +inputtext
                
                .form-row
                    .form-group.col-sm-auto
                        span.badge.badge-pill.badge-danger &nbsp;
                    .form-group.col-sm-6
                        | {{$label := "cas number"}} {{$name := "casnumber"}}
                        +select
                    .form-group.col-sm-5
                        | {{$label := "ce number"}} {{$name := "cenumber"}}
                        +select

                .form-row
                    .form-group.col-sm-12
                        | {{$label := "MSDS link"}} {{$name := "product_msds"}}
                        +inputtext

                .form-row
                    .form-group.col-sm-12
                        | {{$label := "3D formula link"}} {{$name := "product_threedformula"}}
                        +inputtext

                .form-row
                    .form-group.col-sm-6
                        | {{$label := "physical state"}} {{$name := "physicalstate"}}
                        +select
                    .form-group.col-sm-6
                        | {{$label := "class of compound"}} {{$name := "classofcompound"}}
                        +select  
                        
                .form-row
                    .form-group.col-sm-6
                        | {{$label := "signal word"}} {{$name := "signalword"}}
                        +select
                    .form-group.col-sm-6
                        | {{$label := "symbol(s)"}} {{$name := "symbols"}}
                        +selectmultiple

                .form-row
                    .form-group.col-sm-6
                        | {{$label := "hazard statement(s)"}} {{$name := "hazardstatements"}}
                        +selectmultiple
                    .form-group.col-sm-6
                        | {{$label := "precautionary statement(s)"}} {{$name := "precautionarystatements"}}
                        +selectmultiple

                .form-row
                    .form-group.col-sm-12
                        | {{$label := "restricted access"}} {{$name := "product_restricted"}}
                        +checkbox
                .form-row
                    .form-group.col-sm-12
                        | {{$label := "radioactive"}} {{$name := "product_radioactive"}}
                        +checkbox

                .form-row
                    .form-group.col-sm-12
                        | {{$label := "disposal comment"}} {{$name := "product_disposalcomment"}}
                        +inputtextarea
                .form-row
                    .form-group.col-sm-12
                        | {{$label := "remark"}} {{$name := "product_remark"}}
                        +inputtextarea

                button#save.btn.btn-primary(type='button', onclick='saveProduct()') save changes
                button.btn.btn-secondary(type='button', onclick='closeEdit();') close
| {{end}}
| {{define "CONTENTJS"}}
| {{template "COMMONCONTENTJS"}}
    script.
        //
        // close buttons actions
        //
        function closeEdit() { 
            $("#list-collapse").collapse("show");
            $("#edit-collapse").collapse("hide"); 
            $("#switchview").toggle("show");
        }
        
        $( document ).ready(function() {           
            
            // populating search input if needed
            if (URLValues.has("search")) {
                $('#table').bootstrapTable('resetSearch', URLValues.get("search")[0]);
            }

        });
        
        //
        // table data loading
        //
        function queryParams(params) {
            if (URLValues.has("entity")) {
                params["entity"] = URLValues.get("entity")[0];
            }
            if (URLValues.has("product")) {
                params["product"] = URLValues.get("product")[0];
            }
            return params;
        }
        function getData(params) {
            $.ajax({
                url: "/products",
                method: "GET",
                dataType: "JSON",
                data: params.data,
            }).done(function(data, textStatus, jqXHR) {
                params.success({
                    rows: data.rows,
                    total: data.total,
                });
            }).fail(function(jqXHR, textStatus, errorThrown) {
                params.error(jqXHR.statusText);                
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
        }

        //
        // table detail formatter
        //
        function detailFormatter(index, row) {
            var html = [];
            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-6'><b>id</b>: " + row["product_id"] + "</div>")
            html.push("<div class='col-sm-6'><b>creator</b>: " + row["person"]["person_email"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-6'><b>name</b>: " + row["name"]["name_label"] + "</div>")
            html.push("<div class='col-sm-6'>")
            html.push("<b>synonyms</b>:")
            $.each(row["synonyms"], function (key, value) {
                html.push("<span>" + value["name_label"] + "</span> ");
            });
            html.push("</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-4'><b>empirical formula</b>: " + row["empiricalformula"]["empiricalformula_label"] + "</div>")
            html.push("<div class='col-sm-4'><b>linear formula</b>: " + row["product_linearformula"]["String"] + "</div>")
            html.push("<div class='col-sm-4'><b>3D formula</b>:: " + row["product_threedformula"]["String"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-4'><b>specificity</b>: " + row["product_specificity"]["String"] + "</div>")
            html.push("<div class='col-sm-4'><b>cas</b>: " + row["casnumber"]["casnumber_label"] + "</div>")
            html.push("<div class='col-sm-4'><b>ce</b>: " + row["cenumber"]["cenumber_label"]["String"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-12'><b>msds</b>: " + row["product_msds"]["String"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-4'><b>classofcompound</b>: " + row["classofcompound"]["classofcompound_label"]["String"] + "</div>")
            html.push("<div class='col-sm-4'><b>restricted</b>: " + row["product_restricted"]["Bool"] + "</div>")
            html.push("<div class='col-sm-4'><b>radioactive</b>: " + row["product_radioactive"]["Bool"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-6'>")
            html.push("<b>symbols</b>:")
            $.each(row["symbols"], function (key, value) {
                html.push("<img src='data:" + value["symbol_image"] + "' alt='" + value["symbol_label"] + "' title='" + value["symbol_label"] + "'/>");
            });
            html.push("</div>")
            html.push("<div class='col-sm-6'>")
            html.push("<p><b>signal word</b>: " + row["signalword"]["signalword_label"]["String"] + "</p>")
            html.push("</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-6'>")
            html.push("<b>hazardstatements</b>:")
            html.push("<ul>")
            $.each(row["hazardstatements"], function (key, value) {
                html.push("<li>" + value["hazardstatement_reference"] + ": <i>" + value["hazardstatement_label"] + "</i></li>");
            });
            html.push("</ul>")
            html.push("</div>")
            html.push("<div class='col-sm-4'>")
            html.push("<b>precautionarystatements</b>:")
            html.push("<ul>")
            $.each(row["precautionarystatements"], function (key, value) {
                html.push("<li>" + value["precautionarystatement_reference"] + ": " + value["precautionarystatement_label"] + "</li>");
            });
            html.push("</ul>")
            html.push("</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-12'><b>physical state</b>: " + row["physicalstate"]["physicalstate_label"]["String"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-12'><b>disposal comment</b>: " + row["product_disposalcomment"]["String"] + "</div>")
            html.push("</div>")

            html.push("<div class='row mt-md-3'>")
            html.push("<div class='col-sm-12'><b>remark</b>: " + row["product_remark"]["String"] + "</div>")
            html.push("</div>")
            return html.join('');
        }

        //
        // product_specificityFormatter formatter
        //
        function product_specificityFormatter(value, row, index, field) {
            if (value.Valid) {
                return value.String;
            } else {
                return "";
            }
        }

        //
        // table items actions
        //
        function operateFormatter(value, row, index) {
            // show action buttons if permitted
            pid = row.product_id
            // FIXME: perms
            hasPermission("/f/storages", "POST", pid).done(function(){
                    $("#store"+this.itemId).fadeIn();
            })
            hasPermission("/f/storages/-2", "GET", pid).done(function(){
                    $("#storages"+this.itemId).fadeIn();
            })
            hasPermission("/f/products/-1", "PUT", pid).done(function(){
                    $("#edit"+this.itemId).fadeIn();
            })
            hasPermission("/f/products/-1", "DELETE", pid).done(function(){
                    $("#delete"+this.itemId).fadeIn();
            })

            // buttons are hidden by default
            var actions = [
            '<button id="store' + pid + '" class="store btn btn-link" style="display: none;" title="store" type="button">',
                '<i class="material-icons">move_to_inbox</i>',
            '</button>',
            '<button id="storages' + pid + '" class="storages btn btn-link" style="display: none;" title="storages" type="button">',
                '<i class="material-icons">all_inbox</i>',
            '</button>',
            '<button id="edit' + pid + '" class="edit btn btn-link" style="display: none;" title="edit" type="button">',
                '<i class="material-icons">edit</i>',
            '</button>',
            '<button id="delete' + pid + '" class="delete btn btn-link" style="display: none;" title="delete" type="button">',
                '<i class="material-icons">delete</i>',
            '</button>'];

            return actions.join('&nbsp;')    
        }

        // items actions callback
        function operateEdit(e, value, row, index) {
            // clearing selections
            $('select#casnumber').val(null).trigger('change');
            $('select#casnumber').find('option').remove();
            $('select#cenumber').val(null).trigger('change');
            $('select#cenumber').find('option').remove();
            $('select#name').val(null).trigger('change');
            $('select#name').find('option').remove();
            $('select#symbols').val(null).trigger('change');
            $('select#symbols').find('option').remove();
            $('select#synonyms').val(null).trigger('change');
            $('select#synonyms').find('option').remove();
            $('select#empiricalformula').val(null).trigger('change');
            $('select#empiricalformula').find('option').remove();
            $('select#physicalstate').val(null).trigger('change');
            $('select#physicalstate').find('option').remove();
            $('select#classofcompound').val(null).trigger('change');
            $('select#classofcompound').find('option').remove();
            $('select#symbols').val(null).trigger('change');
            $('select#symbols').find('option').remove();
            $('select#signalword').val(null).trigger('change');
            $('select#signalword').find('option').remove();
            $('select#hazardstatements').val(null).trigger('change');
            $('select#hazardstatements').find('option').remove();
            $('select#precautionarystatements').val(null).trigger('change');
            $('select#precautionarystatements').find('option').remove();

            // getting the product
            $.ajax({
                url: "/products/" + row['product_id'],
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // flattening response data
                fdata = flatten(data);

                // processing sqlNull values
                newfdata = normalizeSqlNull(fdata)

                // autofilling form
                $("#edit-collapse").autofill( newfdata, {"findbyname": false } );
                // setting index hidden input
                $("input#index").val(index);
                
                // select2 is not autofilled - we need a special operation
                var newOption = new Option(data.casnumber.casnumber_label, data.casnumber.casnumber_id, true, true);
                $('select#casnumber').append(newOption).trigger('change');
                
                var newOption = new Option(data.empiricalformula.empiricalformula_label, data.empiricalformula.empiricalformula_id, true, true);
                $('select#empiricalformula').append(newOption).trigger('change');
                
                var newOption = new Option(data.name.name_label, data.name.name_id, true, true);
                $('select#name').append(newOption).trigger('change');

                if (data.cenumber.cenumber_id.Valid) {
                    var newOption = new Option(data.cenumber.cenumber_label.String, data.cenumber.cenumber_id.Int64, true, true);
                    $('select#cenumber').append(newOption).trigger('change');
                }

                if (data.physicalstate.physicalstate_id.Valid) {
                    var newOption = new Option(data.physicalstate.physicalstate_label.String, data.physicalstate.physicalstate_id.Int64, true, true);
                    $('select#physicalstate').append(newOption).trigger('change');
                }

                if (data.classofcompound.classofcompound_id.Valid) {
                    var newOption = new Option(data.classofcompound.classofcompound_label.String, data.classofcompound.classofcompound_id.Int64, true, true);
                    $('select#classofcompound').append(newOption).trigger('change');
                }

                if (data.signalword.signalword_id.Valid) {
                    var newOption = new Option(data.signalword.signalword_label.String, data.signalword.signalword_id.Int64, true, true);
                    $('select#signalword').append(newOption).trigger('change');
                }
               
                for(var i in data.symbols) {
                   var newOption = new Option(data.symbols[i].symbol_label, data.symbols[i].symbol_id, true, true);
                   $('select#symbols').append(newOption).trigger('change');
                }
                
                for(var i in data.synonyms) {
                   var newOption = new Option(data.synonyms[i].name_label, data.synonyms[i].name_id, true, true);
                   $('select#synonyms').append(newOption).trigger('change');
                }

                for(var i in data.hazardstatements) {
                   var newOption = new Option(data.hazardstatements[i].hazardstatement_reference, data.hazardstatements[i].hazardstatement_id, true, true);
                   $('select#hazardstatements').append(newOption).trigger('change');
                }

                for(var i in data.precautionarystatements) {
                   var newOption = new Option(data.precautionarystatements[i].precautionarystatement_reference, data.precautionarystatements[i].precautionarystatement_id, true, true);
                   $('select#precautionarystatements').append(newOption).trigger('change');
                }
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });

            // finally collapsing the view
            $('#edit-collapse').collapse('show');
            $('#list-collapse').collapse('hide');
            $("#switchview").toggle("hide");
        }
        window.operateEvents = {
            'click .store': function (e, value, row, index) {
                window.location.href = "/vc/storages?product=" + row['product_id'];
            },
            'click .storages': function (e, value, row, index) {
                window.location.href = "/v/storages?product=" + row['product_id'];
            },
            'click .edit': function (e, value, row, index) {
                operateEdit(e, value, row, index)
            },
            'click .delete': function (e, value, row, index) {
                // hiding possible previous confirmation button
                $(this).confirmation("show").off( "confirmed.bs.confirmation");
                $(this).confirmation("show").off( "canceled.bs.confirmation");
                
                // ask for confirmation and then delete
                $(this).confirmation("show").on( "confirmed.bs.confirmation", function() {
                    $.ajax({
                        url: "/products/" + row['product_id'],
                        method: "DELETE",
                    }).done(function(data, textStatus, jqXHR) {
                        displayMessage("product deleted", "success");
                        var $table = $('#table');
                        $table.bootstrapTable('refresh');
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        handleHTTPError(jqXHR.statusText, jqXHR.status)
                    });
                }).on( "canceled.bs.confirmation", function() {
                });
            }
        };
| {{end}}