extends static/templates/base.jade

block content
    form#product-create
        .form-group.row
            | {{$label := "name"}} {{$name := "name"}}
            +select
        .form-group.row
            | {{$label := "synonym(s)"}} {{$name := "synonyms"}}
            +selectmultiple
        .form-group.row
            | {{$label := "empirical formula"}} {{$name := "empiricalformula"}}
            +select
        .form-group.row
            | {{$label := "cas number"}} {{$name := "casnumber"}}
            +select
        .form-group.row
            | {{$label := "ce number"}} {{$name := "cenumber"}}
            +select
        .form-group.row
            | {{$label := "specificity"}} {{$name := "product_specificity"}}
            +inputtext
        .form-group.row
            | {{$label := "symbol(s)"}} {{$name := "symbols"}}
            +selectmultiple

    button#save.btn.btn-primary(type='button', onclick='saveProduct()') save changes

block contentjs
    script.

        $( document ).ready(function() {
        
            //
            // update form validation
            //
            $( "#product-create" ).validate({
                // ignore required to validate select2
                ignore: "",
                errorClass: "alert alert-danger",
                rules: {
                    name: {
                        required: true,
                    },
                    empiricalformula: {
                        required: true,
                    },
                    casnumber: {
                        required: true,
                        remote: {
                            url: "",
                            type: "post",
                            beforeSend: function(jqXhr, settings) {
                                settings.url = "/validate/product/-1/casnumber/";
                            },
                            data: {
                                casnumber: function() {
                                    return $('select#casnumber').select2('data')[0].text;
                                },
                                product_specificity:  function() {
                                    return $('#product_specificity').val();
                                },
                            },
                        },
                    },
                    cenumber: {
                        remote: {
                            url: "",
                            type: "post",
                            beforeSend: function(jqXhr, settings) {
                                settings.url = "/validate/product/-1/cenumber/";
                            },
                            data: {
                                cenumber: function() {
                                    return $('select#cenumber').select2('data')[0].text;
                                },
                            },
                        },
                    },
                },
            });
        
             //
            // casnumber select2
            //
            $('select#casnumber').select2({
                tags: true,
                ajax: {
                    url: '/products/casnumbers',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.casnumber_label;
                            obj.id = obj.id || obj.casnumber_id;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-casnumber-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // cenumber select2
            //
            $('select#cenumber').select2({
                tags: true,
                allowClear: true,
                placeholder: "select or enter a CE number",
                ajax: {
                    url: '/products/cenumbers',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.cenumber_label.String;
                            obj.id = obj.id || obj.cenumber_id.Int64;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-cenumber-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // name select2
            //
            $('select#name').select2({
                tags: true,
                ajax: {
                    url: '/products/names',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.name_label;
                            obj.id = obj.id || obj.name_id;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-name-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // empirical formula select2
            //
            $('select#empiricalformula').select2({
                tags: true,
                ajax: {
                    url: '/products/empiricalformulas',
                    data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.empiricalformula_label;
                            obj.id = obj.id || obj.empiricalformula_id;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-empiricalformula-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // synonyms select2
            //
            $('select#synonyms').select2({
                tags: true,
                ajax: {
                    url: '/products/synonyms',
                    data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.name_label;
                            obj.id = obj.id || obj.name_id;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-synonyms-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            });

            //
            // symbols select2
            //
            $('select#symbols').select2({
                tags: true,
                templateResult: formatSymbol,
                ajax: {
                    url: '/products/symbols',
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.symbol_label;
                            obj.id = obj.id || obj.symbol_id;
                            return obj;
                        });
                         return {
                            results: newdata,
                        };
                    }
                }
            });

        });

        //
        // symbols select2 formatter
        //
        function formatSymbol (symbol) {
            if (!symbol.symbol_id) {
                return symbol.symbol_label;
            }
            var s = $(
                '<span><img src="data:' + symbol.symbol_image + '" title="' + symbol.symbol_label + '" /> ' + symbol.symbol_label + '</span>'
            );
            return s;
        };

        function saveProduct() {
            var form = $("#product-create");
            if (! form.valid()) {
                return;
            };

            var product_specificity = $("#edit-collapse input#product_specificity").val(),
                casnumber = $('select#casnumber').select2('data')[0];
                cenumber = $('select#cenumber').select2('data')[0];
                empiricalformula = $('select#empiricalformula').select2('data')[0];
                name_ = $('select#name').select2('data')[0];
                synonyms = $('select#synonyms').select2('data');
                symbols = $('select#symbols').select2('data');
                data = {};
                $.each(symbols, function( index, s ) {
                    data["symbols." + index +".symbol_id"] = s.id;
                    data["symbols." + index +".symbol_label"] = s.text;
                });
                $.each(synonyms, function( index, s ) {
                    data["synonyms." + index +".name_id"] = s.id == s.text ? -1 : s.id;
                    data["synonyms." + index +".name_label"] = s.text;
                });
                $.extend(data, {
                    "product_specificity": product_specificity,
                    "casnumber.casnumber_id": casnumber.id == casnumber.text ? -1 : casnumber.id,
                    "casnumber.casnumber_label": casnumber.text,
                    "empiricalformula.empiricalformula_id": empiricalformula.id == empiricalformula.text ? -1 : empiricalformula.id,
                    "empiricalformula.empiricalformula_label": empiricalformula.text,
                    "name.name_id": name_.id == name_.text ? -1 : name_.id,
                    "name.name_label": name_.text,
                });
                if (cenumber !== undefined) {
                    $.extend(data, {
                        "cenumber.cenumber_id": cenumber.id == cenumber.text ? -1 : cenumber.id,
                        "cenumber.cenumber_label": cenumber === undefined ? "" : cenumber.text,
                    });                    
                }
                $.ajax({
                    url: "/products",
                    method: "POST",
                    dataType: 'json',
                    data: data,
                }).done(function(data, textStatus, jqXHR) {
                    displayMessage("product " + data.name.name_label + " created", "success");
                    setTimeout(function(){ window.location = "/v/products?product="+data.product_id; }, 1000);
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    handleHTTPError(jqXHR.statusText, jqXHR.status)
                });  
        }