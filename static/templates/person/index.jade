extends static/templates/base.jade

block content
    #accordion
        #list-collapse.collapse.show(data-parent='#accordion')
            header.row
                .col-sm-12
                    table#table(data-toggle='table', data-striped='true', data-search='true', data-side-pagination='server', data-pagination='true', data-ajax='getData', data-sort-name='person_email')
                        thead
                            tr
                                th(data-field='person_id') ID
                                th(data-field='person_email' data-sortable='true') email
                                th(data-field='operate', data-formatter='operateFormatter', data-events='operateEvents') actions

        #viewedit-collapse.collapse(data-parent='#accordion')
            form#person-update
                input#index(type='hidden', name='index', value='')
                input#person_id(type='hidden', name='person_id', value='')
                .form-group.row
                    label.col-sm-2.col-form-label(for='name') email
                    .col-sm-10
                        input#person_email.form-control(disabled='disabled', type='text', value='', name='email')
                .form-group.row
                    .col-sm-6
                        .alert.alert-primary product
                    .col-sm-6
                        | {{$id := "permproduct"}} {{$label := "_"}} {{$class := "perm"}}  {{$name := "permproduct"}}
                        +inlineradio
                        | {{$id := "permproductr"}} {{$label := "r"}}
                        +inlineradio
                        | {{$id := "permproductrw"}} {{$label := "rw"}}
                        +inlineradio
                    .col-sm-6
                        .alert.alert-primary storage
                    .col-sm-6
                        | {{$id := "permstorage"}} {{$label := "_"}} {{$class := "perm"}}  {{$name := "permstorage"}}
                        +inlineradio
                        | {{$id := "permstorager"}} {{$label := "r"}}
                        +inlineradio
                        | {{$id := "permstoragerw"}} {{$label := "rw"}}
                        +inlineradio

                button#save.btn.btn-primary(type='button', onclick='savePerson()') save changes
                button.btn.btn-primary(type='button', onclick='closeView();') back

block contentjs
    script.
        //
        // close buttons actions
        //
        function closeView() { $("#list-collapse").collapse("show"); $("#viewedit-collapse").collapse("hide"); }

        //
        // update form validation
        //
        $( "#person-update" ).validate({
            errorClass: "alert alert-danger",
            rules: {
                email: {
                    required: true,
                    email: true,
                    remote: {
                        url: "",
                        beforeSend: function(jqXhr, settings) {
                            settings.url = "/validate/person/" + $("form#person-update input#person_id").val() + "/name/" + $("form#person-update input#person_email").val();
                        },
                    },
                },
            },
        });

        //
        // save person callback
        //
        function savePerson() {
            var form = $("#person-update");
            if (! form.valid()) {
                return;
            };

            var id = $("#viewedit-collapse input#person_id").val(),
                email = $("#viewedit-collapse input#person_email").val();
                $.ajax({
                    url: "/person/" + id,
                    method: "PUT",
                    dataType: 'json',
                    data: {
                        "person_id": id,
                        "person_email": email,
                    },
                }).done(function(data, textStatus, jqXHR) {
                    $('#list-collapse').collapse('show');
                    $('#viewedit-collapse').collapse('hide');
                    var $table = $('#table');
                    var index = $('input#index').val();
                    $table.bootstrapTable('updateRow', {
                        index: index,
                        row: {
                            "person_email": email,
                        }
                    });
                    displayMessage("person " + email + " updated", "success");
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    handleHTTPError(jqXHR.statusText, jqXHR.status)
                });  
        }

        //
        // table data loading
        //
        function getData(params) {
                $.ajax({
                    url: "/people",
                    method: "GET",
                    dataType: "JSON",
                    data: params.data,
                }).done(function(data, textStatus, jqXHR) {
                    params.success({
                        rows: data,
                        total: data.length,
                    });
                }).fail(function(jqXHR, textStatus, errorThrown) {
                    params.error(jqXHR.statusText);                
                    handleHTTPError(jqXHR.statusText, jqXHR.status)
                });           
        }

        //
        // table items actions
        //
        function operateFormatter(value, row, index) {
            // show action buttons if permitted
            eid = row.person_id
            hasPermission("{{ .PersonID }}", "r", "person", eid).done(function(result){
                if(result) {
                    $("#view"+this.itemId).fadeIn();
                }
            })
            hasPermission("{{ .PersonID }}", "w", "person", eid).done(function(result){
                if(result) {
                    $("#edit"+this.itemId).fadeIn();
                    $("#delete"+this.itemId).fadeIn();
                }
            })

            // buttons are hidden by default
            var actions = [
            '<button id="view' + eid + '" class="view btn btn-secondary" style="display: none;" title="view" type="button">',
                '<i class="fas fa-eye"></i>',
            '</button>',
            '<button id="edit' + eid + '" class="edit btn btn-secondary" style="display: none;" title="edit" type="button">',
                '<i class="fas fa-edit"></i>',
            '</button>',
            '<button id="delete' + eid + '" class="delete btn btn-secondary" style="display: none;" title="delete" type="button">',
                '<i class="fas fa-trash-alt"></i>',
            '</button>'];

            return actions.join('&nbsp;')    
        }

        // items actions callback
        function operateEditView(e, value, row, index) {
            $.ajax({
                url: "/person/" + row['person_id'],
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // flattening response data
                fdata = flatten(data);
                // autofilling form
                $("#viewedit-collapse").autofill( fdata, {"findbyname": false } );
                // setting index hidden input
                $("input#index").val(index);
                // finally collapsing the view
                $('#viewedit-collapse').collapse('show');
                $('#list-collapse').collapse('hide');
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
            $.ajax({
                url: "/person/" + row['person_id'] + "/permissions",
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                global.populatePermissionWidget(data);
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
    
            if ($(e.target).hasClass("view")) {
                $("#viewedit-collapse").find("input").prop("disabled", true);
                $("#viewedit-collapse").find("select").prop("disabled", true);
                $("#viewedit-collapse").find("button#save").hide();
            } else {
                $("#viewedit-collapse").find("input").prop("disabled", false);
                $("#viewedit-collapse").find("select").prop("disabled", false);
                $("#viewedit-collapse").find("button#save").show();
            }
        }

        // items actions callback
        window.operateEvents = {
            'click .view': function (e, value, row, index) {
                operateEditView(e, value, row, index)
            },
            'click .edit': function (e, value, row, index) {
                operateEditView(e, value, row, index)
            },
            'click .delete': function (e, value, row, index) {
                // hidding possible previous confirmation button
                $(this).confirmation("show").off( "confirmed.bs.confirmation");
                $(this).confirmation("show").off( "canceled.bs.confirmation");
                
                // ask for confirmation and then delete
                $(this).confirmation("show").on( "confirmed.bs.confirmation", function() {
                    $.ajax({
                        url: "/person/" + row['person_id'],
                        method: "DELETE",
                    }).done(function(data, textStatus, jqXHR) {
                        var $table = $('#table');
                        $table.bootstrapTable('refresh');
                    }).fail(function(jqXHR, textStatus, errorThrown) {
                        handleHTTPError(jqXHR.statusText, jqXHR.status)
                    });
                }).on( "canceled.bs.confirmation", function() {
                });
            }
        };
