| {{define "COMMONCONTENTJS"}}

script.

    $( document ).ready(function() {  
    
            //
            // form validation
            //
            $( "#storage" ).validate({
                errorClass: "alert alert-danger",
                rules: {
                    storelocation: {
                        required: true,
                    },
                },
            });

            //
            // store locations selector select2
            //
            $('select#storelocationselector').select2({
                templateResult: formatStorelocation,
                placeholder: "direct access to a store location",
                ajax: {
                    url: '/storelocations',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.storelocation_fullpath;
                            obj.id = obj.id || obj.storelocation_id.Int64;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-storelocation-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("select2:select", function (e) {
                var data = e.params.data;
                var slid = data.storelocation_id.Int64;
                window.location.href = "/v/products?storelocation=" + slid;
            });

            //
            // store location select2
            //
            $('select#storelocation').select2({
                templateResult: formatStorelocation,
                ajax: {
                    url: '/storelocations',
                        data: function (params) {
                        var query = {
                            storelocation_canstore: true,
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.storelocation_name.String;
                            obj.id = obj.id || obj.storelocation_id.Int64;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-storelocation-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // unit select2
            //
            $('select#unit').select2({
                allowClear: true,
                placeholder: "select a unit",
                ajax: {
                    url: '/storages/units',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.unit_label.String;
                            obj.id = obj.id || obj.unit_id.Int64;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-unit-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

            //
            // suppliers select2
            //
            $('select#supplier').select2({
                allowClear: true,
                tags: true,
                placeholder: "select or enter a supplier",
                createTag: function (params) {
                    if ($("input#exactMatchSupplier").val() == "true") {
                        return null
                    }
                    return {
                        id: params.term,
                        text: params.term,
                    }
                },
                ajax: {
                    url: '/storages/suppliers',
                        data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: params.page*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    dataType: 'json',
                    processResults: function (data) {
                        isExactMatch=false;
                        
                        // looking for an exact match
                        $.each(data.rows, function( index, value ) {
                            if(value.c == 1) {
                                isExactMatch=true;
                            }
                        });
                        
                        // there is a match: setting the input field
                        if (isExactMatch) {
                            $("input#exactMatchSupplier").val("true");
                        } else {
                            $("input#exactMatchSupplier").val("false");
                        }

                        // replacing name by text expected by select2
                        var newdata = $.map(data.rows, function (obj) {
                            obj.text = obj.text || obj.supplier_label.String;
                            obj.id = obj.id || obj.supplier_id.Int64;
                            return obj;
                        });
                        // getting the number of loaded select elements
                        selectnbitems = $("ul#select2-supplier-results li").length + 10;

                        return {
                            results: newdata,
                            pagination: {more: selectnbitems<data.total}
                        };
                    }
                }
            }).on("change", function (e) {
                $(this).valid(); // FIXME: see https://github.com/select2/select2/issues/3901
            });

    });

    //
    // store location select2 formatter
    //
    function formatStorelocation (sl) {
        if (!sl.storelocation_id) {
            return sl.storelocation_fullpath;
        }
        var canstore = '<i class="material-icons">close</i>';
        if (sl.storelocation_canstore.Valid && sl.storelocation_canstore.Bool) {
            canstore = '<i class="material-icons">check</i>'
        }
        var s = $(
            '<div><span style="color:' + sl.storelocation_color.String + '">' + sl.storelocation_fullpath + '</span>' + canstore + '</div>'
        );
        return s;
    };

    //
    // save storage callback
    //
    var createCallBack = function createCallback(data, textStatus, jqXHR) {
        displayMessage("storage created", "success");
        setTimeout(function(){ window.location = "/v/storages?product="+data.product.product_id+"&hl="+data.product.product_id; }, 1000);
    }
    var updateCallBack = function updateCallback(data, textStatus, jqXHR) {
        $('#list-collapse').collapse('show');
        $('#edit-collapse').collapse('hide');
        var $table = $('#table');
        var index = $('input#index').val();
        // appending hl parameter to highlight updated row
        updateQueryStringParam("hl", data.storage_id);
        $table.bootstrapTable('refresh');
        displayMessage("storage " + data.storage_id + " updated", "success");
    }
    function saveStorage() {
        var form = $("#storage");
        if (! form.valid()) {
            return;
        };

        var product_id = $("input#product_id").val(),
            storage_id = $("input#storage_id").val(),
            storage_nbitem = $("input#storage_nbitem").val(),
            storage_comment = $("input#storage_comment").val(),
            storage_quantity = $("input#storage_quantity").val(),
            storage_barecode = $("input#storage_barecode").val(),
            unit = $('select#unit').select2('data')[0],
            supplier = $('select#supplier').select2('data')[0],
            storelocation = $('select#storelocation').select2('data')[0],
            ajax_url = "/storages",
            ajax_method = "POST",
            ajax_callback = createCallBack,
            data = {};

            if ($("form#storage input#storage_id").length) {
                ajax_url = "/storages/" + storage_id
                ajax_method = "PUT"
                ajax_callback = updateCallBack
            }

            $.extend(data, {
                "product.product_id": product_id,
                "storage_id": storage_id,
                "storage_nbitem": storage_nbitem == 0 ? 1 : storage_nbitem,
                "storage_comment": storage_comment,
                "storage_quantity": storage_quantity == "" ? 1 : storage_quantity,
                "storage_barecode": storage_barecode,
                "storelocation.storelocation_id": storelocation.id,
            });
            if (supplier !== undefined) {
                $.extend(data, {
                    "supplier.supplier_id": supplier.id == supplier.text ? -1 : supplier.id,
                    "supplier.supplier_label": supplier === undefined ? "" : supplier.text,
                });                    
            }
            if (unit !== undefined) {
                $.extend(data, {
                    "unit.unit_id": unit.id,
                    "unit.unit_label": unit.text,
                });                    
            }
            $.ajax({
                url: ajax_url,
                method: ajax_method,
                dataType: 'json',
                data: data,
            }).done(ajax_callback).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });  
    }

| {{end}}