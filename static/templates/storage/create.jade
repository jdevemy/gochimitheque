extends ../base.jade
block CONTENT
    :go:func
        Storagecreate(c ViewContainer)

    +titleicon("forklift", "storage_create_title")

    .row
        .d-flex.justify-content-center
            #filter-product

    form#storage
        input#index(type='hidden', name='index', value='')
        input#product_id(type='hidden', name='product_id', value='')

        input#exactMatchSupplier(type="hidden")

        .form-group.row
            .col-sm-4
                +inputnumber("nb_duplicate", "storage_nbitem", "1", "1", "50", "")
        hr
        .form-group.row
            .form-group.col-sm-12
                +selectrequired("storage_storelocation_title", "storelocation")
        .form-group.row
            .col-sm-6
                +inputnumber("storage_quantity_title", "storage_quantity", "any", "1", "10000000", "")
            .col-sm-6
                +select("unit_label_title", "unit_quantity") 

        // bio
        .form-group.row
            .col-sm-6
                +inputnumber("storage_concentration_title", "storage_concentration", "any", "1", "10000000", "")
            .col-sm-6
                +select("unit_label_title", "unit_concentration")

        .form-group.row
            .col-sm-12
                +select("supplier_label_title", "supplier")
        .form-group.row
            .col-sm-3
                +inputdate("storage_entrydate_title", "storage_entrydate")
            .col-sm-3
                +inputdate("storage_exitdate_title", "storage_exitdate")
            .col-sm-3
                +inputdate("storage_openingdate_title", "storage_openingdate")
            .col-sm-3
                +inputdate("storage_expirationdate_title", "storage_expirationdate")
        .form-group.row
            .col-sm-6
                +inputtext("storage_reference_title", "storage_reference")
            .col-sm-6
                +inputtext("storage_batchnumber_title", "storage_batchnumber")
        .form-group.row
            .col-sm-12
                +inputtext("storage_barecode_title", "storage_barecode")
                +inputcomment("storage_create_barecode_comment")
        .form-group.row
            .col-sm-12
                +inputtext("storage_comment_title", "storage_comment")  
        .form-group.row
            .col-sm-12
                +checkbox("storage_todestroy_title", "storage_todestroy")

    button#save.btn.btn-link(type='button', onclick='saveStorage()')
        span.mdi.mdi-content-save.mdi-24px.iconlabel
            = T("save", 1)

block CONTENTJS
    script.

       $( document ).ready(function() {           

            //
            // retrieving product
            //
            var urlParams = new URLSearchParams(window.location.search);
            p = urlParams.get("product");
            if (p === null) {
                window.location.replace("/v/products");
            }
            // getting the product
            $.ajax({
                url: proxyPath + "products/" + p,
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                $("input#product_id").val(p);
                $("#filter-product").html(gjsWidgets.title(data.name.name_label + " " + data.product_specificity.String, "product"));
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });

            // clone mode
            s = urlParams.get("storage");
            if (s !== null) {
            // getting the storage
            $.ajax({
                url: proxyPath + "storages/" + s,
                method: "GET",
            }).done(function(data, textStatus, jqXHR) {
                // flattening response data
                fdata = flatten(data);

                // processing sqlNull values
                //newfdata = normalizeSqlNull(fdata)
                newfdata = gjsUtils.normalizeSqlNull(fdata);

                // autofilling form
                $("form#storage").autofill( newfdata, {"findbyname": false } );

                // select2 is not autofilled - we need a special operation
                var newOption = new Option(data.storelocation.storelocation_name.String, data.storelocation.storelocation_id.Int64, true, true);
                $('select#storelocation').append(newOption).trigger('change');

                if (data.unit_quantity.unit_id.Valid) {
                    var newOption = new Option(data.unit_quantity.unit_label.String, data.unit_quantity.unit_id.Int64, true, true);
                    $('select#unit_quantity').append(newOption).trigger('change');
                }

                if (data.supplier.supplier_id.Valid) {
                    var newOption = new Option(data.supplier.supplier_label.String, data.supplier.supplier_id.Int64, true, true);
                    $('select#supplier').append(newOption).trigger('change');
                }         
            }).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });
            }

        });

    script(src="../js/chim/storage.js")