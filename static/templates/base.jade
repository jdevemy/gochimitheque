include mixins
html
    head
        include head

        link(href=c.ProxyPath + "css/bootstrap.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/bootstrap-table.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/select2.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/bootstrap-colorpicker.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/fontawesome.all.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/chimitheque.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/materialdesignicons.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/bootstrap-toggle.min.css",  rel="stylesheet" )
        link(href=c.ProxyPath + "css/animate.min.css",  rel="stylesheet" )
        
        script(src=c.ProxyPath + "js/jquery-3.3.1.min.js")
    body
        div#message
        div.container
            include header
            
            nav.navbar.navbar-expand-lg.navbar-light.bg-light
                a.navbar-brand(href="https://github.com/tbellembois/gochimitheque")
                    img(src=c.ProxyPath + "img/logo_chimitheque_small.png", alt="chimitheque_logo", title="Chimith√®que")
                button.navbar-toggler(
                                    type="button"
                                    data-toggle="collapse" 
                                    data-target="#navbarSupportedContent" 
                                    aria-controls="navbarSupportedContent" 
                                    aria-expanded="false" 
                                    aria-label="Toggle navigation")
                    span.navbar-toggler-icon

                div.collapse.navbar-collapse#navbarSupportedContent
                    ul.navbar-nav.mr-auto
                        if HasPermission(c.PersonID, "r", "products", -2)
                            li.nav-item.active
                                a(href=c.ProxyPath + "v/products").nav-link
                                    span.mdi.mdi-home.mdi-36px.iconlabel
                                        = T("menu_home", 1) 

                        if HasPermission(c.PersonID, "r", "products", -2)
                            li.nav-item.active
                                a(href=c.ProxyPath + "v/products?bookmark=true").nav-link
                                    span.mdi.mdi-star.mdi-36px.iconlabel
                                        = T("menu_bookmark", 1) 

                        if HasPermission(c.PersonID, "w", "products", -2)
                            li.nav-item
                                a(href=c.ProxyPath + "vc/products").nav-link
                                    span.mdi.mdi-tag.mdi-36px.iconlabel
                                        = T("menu_create_productcard", 1)
                        if HasPermission(c.PersonID, "r", "entities", -2)
                            li.nav-item.dropdown
                                a(href="#", title="manage entities").nav-link.dropdown-toggle#navbarDropdown(
                                    role="button" 
                                    data-toggle="dropdown" 
                                    aria-haspopup="true" 
                                    aria-expanded="false")
                                    span.mdi.mdi-store.mdi-36px.iconlabel
                                        = T("menu_entity", 1)
                                div.dropdown-menu(aria-labelledby="navbarDropdown")
                                    a(href=c.ProxyPath + "v/entities", title="list").dropdown-item list
                                    if HasPermission(c.PersonID, "all", "all", -1)
                                        a(href=c.ProxyPath + "vc/entities", title="create").dropdown-item create

                        if HasPermission(c.PersonID, "r", "storages", -2)
                            li.nav-item.dropdown
                                a(href="#", title="manage storelocations").nav-link.dropdown-toggle#navbarDropdown(
                                    role="button" 
                                    data-toggle="dropdown" 
                                    aria-haspopup="true" 
                                    aria-expanded="false")
                                    span.mdi.mdi-docker.mdi-36px.iconlabel
                                        = T("menu_storelocation", 1)
                                div.dropdown-menu(aria-labelledby="navbarDropdown")
                                    a(href=c.ProxyPath + "v/storelocations", title="list").dropdown-item list
                                    if HasPermission(c.PersonID, "all", "all", -2)
                                        a(href=c.ProxyPath + "vc/storelocations", title="create").dropdown-item create

                        if HasPermission(c.PersonID, "r", "people", -2)
                            li.nav-item.dropdown
                                a(href="#", title="manage people").nav-link.dropdown-toggle#navbarDropdown(
                                    role="button" 
                                    data-toggle="dropdown" 
                                    aria-haspopup="true" 
                                    aria-expanded="false")
                                    span.mdi.mdi-account-group.mdi-36px.iconlabel
                                        = T("menu_people", 1)
                                div.dropdown-menu(aria-labelledby="navbarDropdown")
                                    a(href=c.ProxyPath + "v/people", title="list").dropdown-item list
                                    if HasPermission(c.PersonID, "w", "people", -2)
                                        a(href=c.ProxyPath + "vc/people", title="create").dropdown-item create

                        li.nav-item
                            a.nav-link(title= "change password" href=c.ProxyPath + "vu/peoplepass")
                                span.mdi.mdi-shield-lock-outline.mdi-36px.iconlabel
                                        = T("menu_password", 1)
                                
                        li.nav-item
                            a.nav-link(title= "logout" href=c.ProxyPath+"delete-token")
                                span.mdi.mdi-logout.mdi-36px.iconlabel
                                        = T("menu_logout", 1 )

            block CONTENT
            include footer

        include foot
        include localejs
        
        -
            json, _ := json.Marshal(c)

            var out string
            for key, value := range c.URLValues {
	            out += fmt.Sprintf("URLValues.set(%s, %s)\n", key, value)
            }
            
        script.
            //
            // common javascript
            //

            // query parameters saved - used for the storages<>products views switch
            var lastQueryParams;

            // proxy path
            var proxyPath = "!{ c.ProxyPath }";
            
            // request context
            var container = !{fmt.Sprintf("%s", json)};

            // url parameters
            var URLValues = new Map();

            // initializing query parameters map
            !{out}

            // setting up logged user
            window.onload = function() {
                // cookie set by the GetTokenHandler() function after login
                var email = readCookie("email")
                var urlParams = new URLSearchParams(window.location.search);
                var message = urlParams.get("message");
                
                if (email != null) {
                    document.getElementById("logged").innerHTML = email;
                }
                if (message != null) {
                    global.displayMessage(message, "success");
                }
            };

            // call the "fake" (/f/) endpoints to check
            // the permission on the given item and
            // stores the result in the cache
            function hasPermission(item, id, method) {
                // promise to be returned
                var permpromise = $.Deferred();

                // building the cache key
                key = item + ":" + id + ":" + method

                // getting the permission cache
                permcache = localStorage.getItem(key);

                if (permcache) {
                    if (permcache == "true") {
                        permpromise.resolve();
                    } else {
                        permpromise.reject();
                    }
                } else {
                    // building ajax url
                    url = proxyPath + "f/" + item + "/" + id;

                    permpromise = $.ajax({
                        url: url,
                        method: method,
                    });
                }
                return permpromise;
            }
           
        script(src=c.ProxyPath + "js/jquery.formautofill.min.js" )
        script(src=c.ProxyPath + "js/jquery.validate.min.js" )
        script(src=c.ProxyPath + "js/jquery.validate.additional-methods.min.js" )
        script(src=c.ProxyPath + "js/select2.full.min.js" )
        script(src=c.ProxyPath + "js/popper.min.js" )
        script(src=c.ProxyPath + "js/bootstrap.min.js" )
        script(src=c.ProxyPath + "js/bootstrap-table.min.js" )
        script(src=c.ProxyPath + "js/bootstrap-confirmation.min.js" )
        script(src=c.ProxyPath + "js/bootstrap-colorpicker.min.js" )
        script(src=c.ProxyPath + "js/bootstrap-toggle.min.js" )
        script(src=c.ProxyPath + "js/JSmol.lite.nojq.js" )
        script(src=c.ProxyPath + "js/chim/gjs-common.js" )
        script(src=c.ProxyPath + "js/chim/chimcommon.js" )
        script(src=c.ProxyPath + "js/chim/login.js" )
        
        block CONTENTJS

