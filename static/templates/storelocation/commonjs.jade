| {{define "COMMONCONTENTJS"}}

script.

    $( document ).ready(function() { 

            //
            // form validation
            //
            $( "#storelocation" ).validate({
                // ignore required to validate select2
                ignore: "",
                errorClass: "alert alert-danger",
                rules: {
                    storelocation_name: {
                        required: true,
                    },
                    entity: {
                        required: true,
                    },
                },
            });

            //
            // entity select2
            //
            $('select#entity').select2({
                ajax: {
                    url: proxyPath + 'entities',
                    dataType: 'json',
                    data: function (params) {
                        var query = {
                            search: params.term,
                            page: params.page || 1,
                            offset: (params.page-1)*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    processResults: function (data) {
                    // replacing email by text expected by select2
                    var newdata = $.map(data.rows, function (obj) {
                        obj.text = obj.text || obj.entity_name;
                        obj.id = obj.id || obj.entity_id;
                        return obj;
                    });
                    // getting the number of loaded select elements
                    selectnbitems = $("ul#select2-entity li").length + 10;

                    return {
                        results: newdata,
                        pagination: {more: selectnbitems<data.total}
                    };
                    }
                }
            });
            $('select#entity').on('select2:select', function (e) {
                $('select#storelocation').val(null).trigger('change');
                $('select#storelocation').find('option').remove();
            });


            //
            // storelocation select2
            //
            $('select#storelocation').select2({
                placeholder: "select an entity first",
                ajax: {
                    url: proxyPath + 'storelocations',
                    dataType: 'json',
                    data: function (params) {
                        eid = $('select#entity').select2('data')[0].id;
                        var query = {
                            entity: eid,
                            search: params.term,
                            page: params.page || 1,
                            offset: (params.page-1)*10 || 0,
                            limit: 10
                        }

                        // Query parameters will be ?search=[term]&page=[page]
                        return query;
                    },
                    processResults: function (data) {
                    // replacing email by text expected by select2
                    var newdata = $.map(data.rows, function (obj) {
                        obj.text = obj.text || obj.storelocation_name.String;
                        obj.id = obj.id || obj.storelocation_id.Int64;
                        return obj;
                    });
                    // getting the number of loaded select elements
                    selectnbitems = $("ul#select2-storelocation li").length + 10;

                    return {
                        results: newdata,
                        pagination: {more: selectnbitems<data.total}
                    };
                    }
                }
            });

            //
            // color picker
            //
            $("#storelocation_color").colorpicker();

    });

    //
    // save store location callback
    //
    var createCallBack = function createCallback(data, textStatus, jqXHR) {
        global.displayMessage("store location " + data.storelocation_name.String + " created", "success");
        setTimeout(function(){ window.location = proxyPath + "/v/storelocations"; }, 1000);
    }
    var updateCallBack = function updateCallback(data, textStatus, jqXHR) {
        $('#list-collapse').collapse('show');
        $('#edit-collapse').collapse('hide');
        var $table = $('#table');
        var index = $('input#index').val();
        $table.bootstrapTable('updateRow', {
            index: index,
            row: {
                "storelocation_name": data.storelocation_name,
                "storelocation_canstore": data.storelocation_canstore,
                "storelocation_color": data.storelocation_color,
                "entity.entity_name": data.entity.entity_name,
            }
        });
        global.displayMessage("store location " + data.storelocation_name.String + " updated", "success");
    }
    function saveStoreLocation() {
        var form = $("#storelocation");
        if (! form.valid()) {
            return;
        };

        var storelocation_id = $("input#storelocation_id").val(),
            storelocation_name = $("input#storelocation_name").val(),
            storelocation_color = $("input#storelocation_color").val(),
            storelocation_canstore = $("input#storelocation_canstore:CHECKED").val(),
            entity = $('select#entity').select2('data')[0],
            storelocation = $('select#storelocation').select2('data')[0],
            ajax_url = proxyPath + "storelocations",
            ajax_method = "POST",
            ajax_callback = createCallBack,
            data = {};

            if (storelocation !== undefined) {
                $.extend(data, {
                    "storelocation.storelocation.storelocation_id": storelocation.id,
                    "storelocation.storelocation.storelocation_name": storelocation.text,
                });                    
            }

            if ($("form#storelocation input#storelocation_id").length) {
                ajax_url = proxyPath + "storelocations/" + storelocation_id
                ajax_method = "PUT"
                ajax_callback = updateCallBack
            }

            $.extend(data, {
                "storelocation_id": storelocation_id,
                "storelocation_name": storelocation_name,
                "storelocation_color": storelocation_color,
                "storelocation_canstore": storelocation_canstore == "on" ? true : false,
                "entity.entity_id": entity.id,
                "entity.entity_name": entity.text,
            });
            $.ajax({
                url: ajax_url,
                method: ajax_method,
                dataType: 'json',
                data: data,
            }).done(ajax_callback).fail(function(jqXHR, textStatus, errorThrown) {
                handleHTTPError(jqXHR.statusText, jqXHR.status)
            });  
        }

| {{end}}